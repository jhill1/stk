.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STK_REPLACE_TAXA 1p"
.TH STK_REPLACE_TAXA 1p "2011-08-12" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Replace Taxa"
.IX Header "Replace Taxa"
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
stk_replace_taxa.pl [options]
.PP
.Vb 10
\& Options:
\&   \-\-help            brief help message
\&   \-\-man             full documentation
\&   \-\-dir             directory in which replacements should occur 
\&   \-\-file            file in which replacments should occur
\&   \-\-taxa            file specifying which substitions to carry out            
\&   \-\-old             taxon to be replaced
\&   \-\-new             the new taxon. May be omitted, in which case old taxon is removed
\&   \-\-verbose         verbose messages
\&   \-\-reverse         the taxa file will contain taxa to keep with this flag on
.Ve
.PP
One of \f(CW\*(C`dir\*(C'\fR or \f(CW\*(C`file\*(C'\fR is required. One of \f(CW\*(C`old\*(C'\fR or \f(CW\*(C`taxa\*(C'\fR is required.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-dir\fR" 4
.IX Item "--dir"
A directory which contains tree files that require replacing.
.IP "\fB\-\-file\fR" 4
.IX Item "--file"
The file (tree or \s-1XML\s0) which has taxa that require replacing
.IP "\fB\-\-taxa\fR" 4
.IX Item "--taxa"
A file containing the substitutions to be made. See full documentation for details
.IP "\fB\-\-old\fR" 4
.IX Item "--old"
The old taxa to be replaced. Note that spaces in the taxon name must be replaced with _
.IP "\fB\-\-new\fR" 4
.IX Item "--new"
The new taxa. Note that spaces in the taxon name must be replaced with _. If blank, \f(CW\*(C`old\*(C'\fR will be deleted.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Print a brief help message and exits.
.IP "\fB\-\-man\fR" 4
.IX Item "--man"
Prints the manual page and exits.
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
Print verbose messages
.PP
One of \f(CW\*(C`file\*(C'\fR or \f(CW\*(C`dir\*(C'\fR must be specified. Either \f(CW\*(C`taxa\*(C'\fR or \f(CW\*(C`old\*(C'\fR must also be specified. 
\&\f(CW\*(C`new\*(C'\fR can be ommitted to replace the original taxon.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBReplace Taxa\fR replaces a single taxon or multiple taxa with either
another taxon or multiple taxa as a polytomy. Replacement is done
on both tree files and \s-1XML\s0 files (if present). If a file is specified
only that file has the taxa replaced.
.PP
A taxon can be deleted by specifying a blank new taxon.
.PP
All taxon names are \fBcase sensitive\fR.
.PP
Multiple replacements are achieved by supplying a \*(L"taxa file\*(R". This lists
\&\*(L"old taxa\*(R" and \*(L"new taxa\*(R" on individual lines in the file, seperated by an \*(L"=\*(R"
sign. For example:
 old_taxon = new_taxon
 old_taxon2 = new_taxon1, new_taxon2, new_taxon3
 old_taxon3 =
.PP
The first line above does a simple substitution for \f(CW\*(C`old_taxon\*(C'\fR with \f(CW\*(C`new_taxon\*(C'\fR.
The second line replaces \f(CW\*(C`old_taxon2\*(C'\fR with a polytomy of \f(CW\*(C`new_taxon1\*(C'\fR, \f(CW\*(C`new_taxon2\*(C'\fR
and, \f(CW\*(C`new_taxon3\*(C'\fR in a tree file and a simple substitution in an \s-1XML\s0 file. The third line
removes \f(CW\*(C`old_taxon3\*(C'\fR. Note there are spaces \fBeither\fR side of the equals sign. These
spaces \fBmust\fR occur or the file is invalid.
.PP
In addition, the underscores (which are required for the tree file) are required here
also. However, they will be replaced by spaces in the \s-1XML\s0 file.
.PP
The script works on either a single file or directory of files (including subdirectories).
.PP
\&\fBWarning\fR: This script simply overwrites existing data \- please back up data before using it.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Remove all instances of \*(L"MRPOutgroup\*(R" from a dataset
.PP
.Vb 1
\& perl stk_replace_taxa.pl \-\-dir /home/data/phylogenies \-\-old MRPOutgroup
.Ve
.PP
Replace taxa_1 with taxa_2 within a single tree file
.PP
.Vb 1
\& perl stk_replace_taxa.pl \-\-file /home/data/tree1.tre \-\-old taxa_1 \-\-new taxa_2
.Ve
.SH "REQUIRES"
.IX Header "REQUIRES"
Perl 5.004, Carp::*, Bio::STK::*, Getopt::Long; Pod::Usage;
.SH "FEEDBACK"
.IX Header "FEEDBACK"
All feedback (bugs, feature enhancements, etc.) are all greatly appreciated.
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 2
\& Jon Hill (jon.hill@imperial.ac.uk)
\& Katie Davis (k.davis@udcf.gla.ac.uk)
.Ve
