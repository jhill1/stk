include "characters.rnc"
include "analyses.rnc"

start =
    (
        ## Phylo storage is a XML based storage system for source trees
        ## used for supertree analysis. This node is the top level - find the
        ## sources and trees below.
        element phylo_storage {
            comment,
            ## This project's name 
            element project_name {
                anystring
            },
            ## The source trees. Each source consists of a single
            ## reference (paper, book, etc) and one or more trees
            element sources {
                element source {
                    source,
                    comment
                }+,
                comment
            },
            ## Automatic recording of the projects history in terms
            ## of which processing steps have been used.
            ## Feel free to add extra comments too.
            element history {
                element event {
                    ## Format: 2011-12-31 14:14:54.242
                    element datetime {
                        anystring
                    },
                    ## This is normally a command used
                    element action {
                        anystring
                    },
                    ## Some notes on this action
                    comment
                }*
            }
        }
    )

# End of main options

source=
(
    ## A human-readable name for this 
    ## source tree. This can be automatically generated by clicking
    ## the "Auto-gen name" button below, or using Standardise source names function.
    attribute name { string },
    (
    ## Contributer - information about the person adding this 
    ## data to the file.
    element contributor {
        person,
        element institution { 
            anystring 
        }?
    }?,
    ## Information on the source publication. Use the File->Import bibliography
    ## to read in a bibtex file and populate all your bibliographic data
    element bibliographic_information {
        publication,
        ## Some notes on this action
        comment
    },
    ## This is a source tree and associated meta-data
    element source_tree {
        attribute name { string }+,
        element tree {
            ## The tree string. This is a Newick/Nexus formatted tree string. You can import
            ## a file using the "Import tree" button below or copy 
            ## paste a string. Tested using Meqsuite, Treeview, Dendroscope to generate trees.
            element tree_string {
                anystring
            },
            element figure_legend {
                anystring
            },
            element figure_number {
                anystring
            },
            element page_number {
                anystring
            },
            comment,
            ## Information on how the tree was created, software, etc
            element tree_inference {
                ## Which analytical methods were used to create
                ## the this tree?
                analysis+,
                comment,
                ## Which software was used?
                software?,
                ## Did the authors give the command or parameters used to 
                ## create the tree?
                element parameters_used {
                    anystring
                }?,
                evolution_models,
                element character_weights {
                    anystring
                }*,
                consensus?,
                comment //TODO should go, duplicated comment, maybe move down.
            },
            element topology {
                ## Which taxon or taxa were the outgroup in this study? Just make a list here
                element outgroup {
                    anystring
                },
                ## Was the tree rooted or unrooted?
                element rooting {
                    attribute type { "Rooted" | "Unrooted" }
                }?
            },
            ## Should this tree be weighted? The weight value is a fraction (0-1) where the sum
            ## of weights for a group of tree should be 1. For example if you have two trees that
            ## need weighting then they should be 0.5 each. 5 tree should be 0.2, etc, etc.
            element weight {
                real
            }?,
            ## Any tree support values recorded?
            element tree_support {
                anystring
            }?,
            ## Are branch supports available? What kind? Add the treestring with branch supports
            ## below. Experimental.
            element branch_support {
                ## a tree string with support values added
                element tree_string {
                    anystring
                },
                support,
                comment
            }?,
            ## Are branch lengths available? What kind? Add the treestring with branch lengths
            ## below. Experimental.
            element branch_lengths {
                ## a tree string with branch lengths
                element tree_string {
                    anystring
                },
                element units {
                    anystring
                }?,
                evolution_models,
                comment
            }?
        },
        ## You can store information about taxa in the tree
        ## in this section. Mix of fossil and extant, fossil only or extant only.
        ## 
        ## If fossil and extant, which taxa are fossil taxa.
        element taxa_data {
            element mixed_fossil_and_extant {
                taxon+
            }|
            element all_extant {
                taxon*
            }| element all_fossil {
                taxon*
            } 
        },
        ## This stores the character data used to construct the 
        ## source tree(s).
        element character_data {
            characters+
        },
        ## Some notes on this action
        comment
    }+,
    comment
    )
)

publication=
(
        element article {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },
            element journal {
                anystring
            }?,
            element volume {
                anystring
            }?,
            element number{
                anystring
            }?,
            element pages {
                anystring
            }?,
            element issue {
                anystring
            }?,
            element doi {
                anystring
            }?,
            element url {
                anystring
            }?

        }|
        element book {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },            
            element editors {
                element editor {
                    person
                }+
            }?,
            element series {
                anystring
            }?,
            element publisher {
                anystring
            }?,
            element doi {
                anystring
            }?,
            element url {
                anystring
            }?
        }|
        element in_book {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },            
            element editors {
                element editor {
                    person
                }+
            }?,
            element series {
                anystring
            }?,
            element publisher {
                anystring
            }?,
            element pages {
                anystring
            }?,
            element doi {
                anystring
            }?
        }| 
        element in_collection {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },        
            element editors {
                element editor {
                    person
                }+
            }?,
            element booktitle {
                anystring
            },
            element series {
                anystring
            }?,
            element publisher {
                anystring
            }?,
            element pages {
                anystring
            }?,
            element doi {
                anystring
            }?,
            element url {
                anystring
            }?
        }
)

person= 
(
    ## Surname, family or last name
    element surname {
        anystring
    },
    element other_names {
        anystring
    }
)

taxon=
(
    element taxon {
        ## Name is exactly as in tree
        attribute name { string },
        element known_synonyms {
            element synonym {
                anystring
            }*
        }?,
        ## Accession number/specimen identifier
        element accession_number_or_specimen_identifier {
            anystring
            # data repository need adding here - move to atributes
        }?,
        taxon_type,
        comment
    }
)

taxon_type = 
(
    element fossil {
        element locality {
            anystring
        }?,
        element stratigraphic_range {
            anystring
        }?,
        element first_occurrance {
            anystring
        }?,
        element last_occurrance {
            anystring
        }?,
        comment
    }|
    element extant {
        element locality {
            anystring
        }?,
        ## GPS, etc
        element precise_georeference {
            anystring
        }?,
        conservation,
        comment
    }


)

software=
(
    ## Name and version of the software used
    element software {
        attribute name {string},
        attribute version {string}
    },
    comment
)

# Any value in the xml file can be accompanied by a comment
# displayed together in the gui.
comment =
   element comment {
      xsd:string
   }?

# A simple string
anystring =
   (
      element string_value{
         # Lines is a hint to the gui about the size of the text box.
         # It is not an enforced limit on string length.
         attribute lines { "1" },
         xsd:string
      },
      comment
   )

# a filename for which the gui 
filename =
   (
      element string_value{
         attribute type { "filename" },
         # Lines is a hint to the gui about the size of the text box.
         # It is not an enforced limit on string length.
         attribute lines { "1" },
         xsd:string
      },
      comment
   )

integer =
   (
      element integer_value{
         attribute rank { "0" },
         list {xsd:integer}
      },
      comment
   )

# an integer vector of any length
integer_vector =
   (
      element integer_value{
         attribute rank { "1" },
         attribute shape { xsd:integer },
         list {xsd:integer+}
      },
      comment
   )

# an integer tensor of any shape
integer_tensor =
   (
      element integer_value{
         attribute rank { "2" },
         attribute shape { list{xsd:integer, xsd:integer} },
         list {xsd:integer+}
      },
      comment
   )

real =
   (
      element real_value{
         attribute rank { "0" },
         list {xsd:float}
      },
      comment
   )

# An arbitrary length real vector
real_vector =
   (
      element real_value{
         attribute rank { "1" },
         attribute shape { xsd:integer },
         list {xsd:float+}
      },
      comment
   )

# An arbitrary size real matrix (rank 2 tensor).
real_tensor =
   (
      element real_value{
         attribute rank { "2" },
         attribute shape { list{xsd:integer, xsd:integer} },
         list {xsd:float+}
      },
      comment
   )


consensus =
(
    element consensus_type {
        attribute name {string}
    }|
    element consensus_type {
        attribute name {"Strict"}
    }|
    element consensus_type {
        attribute name {"Majority Rules 50%"}
    }|
    element consensus_type {
        attribute name {"Adams"}
    }
)

support =
(
    element type_of_support {
        attribute name {string}
    }|
    element type_of_support {
        attribute name {"Jacknifing"}
    }|
    element type_of_support {
        attribute name {"Bootstrapping"}
    }|
    element type_of_support {
        attribute name {"Bremer Support"}
    }
)

evolution_models =
(
    element model_of_evolution {
        anystring
    }*
)

conservation = 
(
    element conservation_status {
		element iucn_red_list {
            element category {
			    anystring
		    }?,
            element criteria {
			    anystring
		    }?,
		    element url {
			    anystring
		    }?
		}?,
		element uk_bap {
		    element category {
			    anystring
		    }?,
		    element criteria {
			    anystring
		    }?,
		    element url {
			    anystring
		    }?
		}?
    }?
)


char_info=
(
    ## Is the data online anywhere, e.g. as a NEXUS file?
    element link_to_online_data {
        anystring
    }?,
    element alignment_method {
        element algorithm_or_method {
            string
        }?,
        software?,
        element parameters_used {
            anystring
        }?,
        ## was the alignment corrected in any way?
        element corrected {
            empty
        }?
    }?,
    comment
)

