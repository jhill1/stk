include "characters.rnc"
include "analyses.rnc"

start =
    (
        ## Phylo storage is a XML based storage system for source trees
        ## used for supertree analysis. This node is the top level - find the
        ## sources and trees below.
        element phylo_storage {
            comment,
            ## This project's name 
            element project_name {
                anystring
            },
            ## The source trees. Each source consists of a single
            ## reference (paper, book, etc) and one or more trees
            element sources {
                element source {
                    source
                }+,
                comment
            },
            ## Automatic recording of the projects history in terms
            ## of which processing steps have been used.
            ## Feel free to add extra comments too.
            element history {
                element event {
                    ## Format: 2011-12-31 14:14:54.242
                    element datetime {
                        anystring
                    },
                    ## This is normally a command used
                    element action {
                        anystring
                    },
                    ## Some notes on this action
                    comment
                }*
            }
        }
    )

# End of main options

source=
(
    ## A human-readable name for this 
    ## source tree. This can be automatically generated by clicking
    ## the "Auto-gen name" button below.
    attribute name { string },
    (
    ## Information on the source publication. The button below can be
    ## used to parse a bibtex citation foe this reference.
    element source_publication {
        publication,
        ## Some notes on this action
        comment
    },
    ## This is a source tree and associated meta-data
    element source_tree {
        attribute name { string }+,
        ## This stores the character data used to construct the 
        ## source tree(s).
        element character_data {
            characters+
        },
        ## Which analytical methods were used to createan
        ## the source tree?
        element analysis_used {
            analysis
        },
        ## The tree data. This is a Nexus formatted tree string. You can import
        ## a standard Nexus file using the "Import tree" button below or copy 
        ## paste a string.
        element tree_data {
            anystring
        },
        element score_information {
            anystring
        }?,
        ## You can store information about taxa in the tree
        ## in this section. 
        element taxa_data {
            taxon  
        }?,
        ## Some notes on this action
        comment
    }+
    )
)

publication=
(
        element article {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },
            element journal {
                anystring
            }?,
            element volume {
                anystring
            }?,
            element pages {
                anystring
            }?,
            element issue {
                anystring
            }?,
            element doi {
                anystring
            }?
        }|
        element book {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },            
            element editors {
                element editor {
                    person
                }+
            }?,
            element series {
                anystring
            }?,
            element publisher {
                anystring
            }?,
            element doi {
                anystring
            }?
        }|
        element inbook {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },            
            element editors {
                element editor {
                    person
                }+
            }?,
            element series {
                anystring
            }?,
            element publisher {
                anystring
            }?,
            element pages {
                anystring
            }?,
            element doi {
                anystring
            }?
        }| 
        element incollection {
            ## Enter each author seperately
            element authors {
                element author {
                    person
                }+
            },
            ## The title of the work
            element title {
                anystring
            },
            ## Year of original publication
            element year {
                integer
            },        
            element editors {
                element editor {
                    person
                }+
            }?,
            element booktitle {
                anystring
            },
            element series {
                anystring
            }?,
            element publisher {
                anystring
            }?,
            element pages {
                anystring
            }?,
            element doi {
                anystring
            }?
        }
)

person= 
(
    ## Surname, family or last name
    element surname {
        anystring
    },
    element other_names {
        anystring
    }
)

taxon=
(
    element taxon {
        attribute name { string },
        element fossil {
            element location {
                anystring
            }?,
            element date {
                anystring
            }?
        }?,
        element synonyms {
            element synonym {
                anystring
            }*
        }?
    }*
)

# Any value in the xml file can be accompanied by a comment
# displayed together in the gui.
comment =
   element comment {
      xsd:string
   }?

# A simple string
anystring =
   (
      element string_value{
         # Lines is a hint to the gui about the size of the text box.
         # It is not an enforced limit on string length.
         attribute lines { "1" },
         xsd:string
      },
      comment
   )

# a filename for which the gui 
filename =
   (
      element string_value{
         attribute type { "filename" },
         # Lines is a hint to the gui about the size of the text box.
         # It is not an enforced limit on string length.
         attribute lines { "1" },
         xsd:string
      },
      comment
   )

integer =
   (
      element integer_value{
         attribute rank { "0" },
         list {xsd:integer}
      },
      comment
   )

# an integer vector of any length
integer_vector =
   (
      element integer_value{
         attribute rank { "1" },
         attribute shape { xsd:integer },
         list {xsd:integer+}
      },
      comment
   )

# an integer tensor of any shape
integer_tensor =
   (
      element integer_value{
         attribute rank { "2" },
         attribute shape { list{xsd:integer, xsd:integer} },
         list {xsd:integer+}
      },
      comment
   )

real =
   (
      element real_value{
         attribute rank { "0" },
         list {xsd:float}
      },
      comment
   )

# An arbitrary length real vector
real_vector =
   (
      element real_value{
         attribute rank { "1" },
         attribute shape { xsd:integer },
         list {xsd:float+}
      },
      comment
   )

# An arbitrary size real matrix (rank 2 tensor).
real_tensor =
   (
      element real_value{
         attribute rank { "2" },
         attribute shape { list{xsd:integer, xsd:integer} },
         list {xsd:float+}
      },
      comment
   )
